
version: "3"


# 1 service = 1 container.

services:
  # The name of our service is "database"
  # but you can use the name of your choice.
  # Note: This may change the commands you are going to use a little bit.
  database:
    # Official Postgres image from DockerHub (we use the last version)
    image: "postgres:alpine"

    ports:
      - 5432:5432

    environment:
      POSTGRES_USER: postgres # The PostgreSQL user (useful to connect to the database)
      POSTGRES_PASSWORD: "password" # The PostgreSQL password (useful to connect to the database)
      POSTGRES_DB: bidnam1 # The PostgreSQL default database (automatically created at first launch)

    ####
    ## If you want to use a `.env` file, please comment the `environment` section.
    ####

    # The `env_file` tag allows us to declare an environment file
    #env_file:
    #  - .env # The name of your environment file (the one at the repository root)

    ####
    ## If you want to persist the database data, please uncomment the lines below.
    ####

    # The `volumes` tag allows us to share a folder with our container.
    # Its syntax is as follows: [folder path on our machine]:[folder path to retrieve in the container]
    volumes:
      # In this example, we share the folder `db-data` in our root repository, with the default PostgreSQL data path.
      # It means that every time the repository is modifying the data inside
      # of `/var/lib/postgresql/data/`, automatically the change will appear in `db-data`.
      # You don't need to create the `db-data` folder. Docker Compose will do it for you.
      - ./db-data/:/var/lib/postgresql/data/
